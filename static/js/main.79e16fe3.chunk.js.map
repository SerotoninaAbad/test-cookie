{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["API_URL","App","className","src","logo","alt","onClick","fetch","method","headers","credentials","then","response","json","console","log","href","target","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4JAAe,G,KAAA,IAA0B,kC,cCGnCA,EAAU,6CAiDDC,MA/Cf,WAyBE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGA,wBAAQC,QAAS,WAxBrBC,MAAM,GAAD,OAAIP,EAAJ,YANU,CACbQ,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,YAAa,YAIdC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAIE,QAAQC,IAAIH,OAsB1B,4CACA,wBAAQN,QAAS,WAbrBC,MAAM,GAAD,OAAIP,EAAJ,iBANU,CACbQ,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,YAAa,YAIdC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAIE,QAAQC,IAAIH,OAW1B,8BACA,mBACEV,UAAU,WACVc,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,+BC3BOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.79e16fe3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nconst API_URL = 'https://ja-socio-virtual-api.herokuapp.com';\n\nfunction App() {\n  const onClick = () => {\n    const config = {\n      method: 'POST',\n      headers: { 'content-type': 'application/json' },\n      credentials: 'include',\n    };\n\n    fetch(`${API_URL}/symbols`, config)\n    .then(response => response.json())\n    .then(response => console.log(response))\n  }\n\n  const onClickNext = () => {\n    const config = {\n      method: 'POST',\n      headers: { 'content-type': 'application/json' },\n      credentials: 'include',\n    };\n\n    fetch(`${API_URL}/props/ispeps`, config)\n    .then(response => response.json())\n    .then(response => console.log(response))\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <button onClick={() => onClick()}>Call to get cookie credentials</button>\n        <button onClick={() => onClickNext()}>Next with header</button>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}